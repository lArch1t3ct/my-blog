<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on Stavros&#39; Blog</title>
    <link>http://localhost:1313/my-blog/tags/javascript/</link>
    <description>Recent content in JavaScript on Stavros&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 07 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/my-blog/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NodeJS - Simple CRUD API Development</title>
      <link>http://localhost:1313/my-blog/posts/simple-crud-api-development/</link>
      <pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/my-blog/posts/simple-crud-api-development/</guid>
      
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;Hello my dear reader, I hope you are having a fantastic day and you are here to learn something new or hopefully to applause my journey of enhancing my skillset. Ideally both!&lt;/p&gt;
&lt;p&gt;In today&amp;rsquo;s post, a simple CRUD API will be developed in NodeJS using a MongoDB as a database.&lt;/p&gt;
&lt;h1 id=&#34;initializing-the-project&#34;&gt;Initializing The Project&lt;/h1&gt;
&lt;p&gt;The very first thing that it should be done is to create a &lt;code&gt;package.json&lt;/code&gt; file, which sets up a new &lt;code&gt;npm&lt;/code&gt; package.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>JavaScript - KONAMI Code</title>
      <link>http://localhost:1313/my-blog/posts/konami-code/</link>
      <pubDate>Fri, 07 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/my-blog/posts/konami-code/</guid>
      
      <description>&lt;h1 id=&#34;greetings&#34;&gt;Greetings&lt;/h1&gt;
&lt;p&gt;Welcome my dear reader to today&amp;rsquo;s blog post.
I hope that you are having a good day, broading your knowledge base and hitting one target after the other.&lt;/p&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;p&gt;In today&amp;rsquo;s blog post, we&amp;rsquo;ll talk about how we can perform an action when the keybaord sequence is identified.&lt;/p&gt;
&lt;p&gt;This blog was writter with the aim of showing and explaining how we can keep a fixed number of keys pressed by the user—we don&amp;rsquo;t want to create a keylogger—and presenting some intricacies of the &lt;code&gt;Array.prototype.splice()&lt;/code&gt; method.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Accordion Component Implementation</title>
      <link>http://localhost:1313/my-blog/posts/accordion-component-implementation/</link>
      <pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/my-blog/posts/accordion-component-implementation/</guid>
      
      <description>&lt;h1 id=&#34;greetings&#34;&gt;Greetings&lt;/h1&gt;
&lt;p&gt;Greetings from a passionate beginner front-end engineer.
I hope this post finds you healthy and well, and you are progressing toward achieving your goals.&lt;/p&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;p&gt;To enhance my front-end development skills and, more importantly, my React skills, I started the Build 25 React Projects tutorial offered on freeCodeCamp.org by Sangam Mukherjee.
In the beginning, I started assuming the copycat role, that is I followed along with the tutor.&lt;/p&gt;
&lt;p&gt;Despite the fact the code that the tutor solved the two challenges presented, that is single-selection and multi-selection behavior, I realized an opportunity to improve the user experience (UX). The problem emerges when switching between states. In particular:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>React Calculator App</title>
      <link>http://localhost:1313/my-blog/posts/react-calculator-app/</link>
      <pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/my-blog/posts/react-calculator-app/</guid>
      
      <description>&lt;h1 id=&#34;greetings&#34;&gt;Greetings&lt;/h1&gt;
&lt;p&gt;Hello from a pationate beginner to front-end development!&lt;br&gt;
I hope that this post finds you healthy and well, you are having a good day and you are working towards your goals.&lt;/p&gt;
&lt;p&gt;In case you are having a bad day, the only advice that I can give you is, control the things that are in your sphere of influence and accept everything else. If you are in a dark place, be the light!
May God help you overcome your battles as He overcame the world!&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Props Object Destructuring</title>
      <link>http://localhost:1313/my-blog/posts/props-object-destructuring/</link>
      <pubDate>Wed, 27 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/my-blog/posts/props-object-destructuring/</guid>
      
      <description>&lt;h1 id=&#34;greetings&#34;&gt;Greetings&lt;/h1&gt;
&lt;p&gt;Greetings from a passionate beginner front-end engineer to every single of you. I hope that you are having a wonderful day, you are improving yourself and wining your silent battles.&lt;/p&gt;
&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;After finishing the &lt;em&gt;React Basics&lt;/em&gt; course provided by &lt;em&gt;Meta&lt;/em&gt; on Coursera platform, which is part of the &lt;em&gt;Front-end Developer Professional Certificate&lt;/em&gt;, I ended up being puzzled about the way that a component accepts a parameter. In &lt;em&gt;React&lt;/em&gt; language, the way that a component accepts prop data.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
